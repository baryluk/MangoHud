/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.4 */

#ifndef PB_MANGOHUD_PB_H_INCLUDED
#define PB_MANGOHUD_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _TimestampSource {
    TimestampSource_MONOTONIC_RAW = 0,
    TimestampSource_MONOTONIC = 1,
    TimestampSource_MONOTONIC_COARSE = 2,
    TimestampSource_BOOTTIME = 3,
    TimestampSource_REALTIME = 4,
    TimestampSource_REALTIME_COARSE = 5,
    TimestampSource_TAI = 6,
    TimestampSource_GETTIMEOFDAY_UTC = 7,
    TimestampSource_GETTIMEOFDAY_LOCAL = 8,
    TimestampSource_TIME = 9,
    TimestampSource_WINDOWS_QueryPerformanceCounter = 10
} TimestampSource;

typedef enum _Message_ClientType {
    Message_ClientType_APP = 0,
    Message_ClientType_SERVER = 1,
    Message_ClientType_GUI = 2
} Message_ClientType;

typedef enum _Architecture_OS {
    Architecture_OS_LINUX = 0,
    Architecture_OS_FREEBSD = 1,
    Architecture_OS_MACOS = 2,
    Architecture_OS_WINDOWS = 3
} Architecture_OS;

/* Struct definitions */
typedef struct _Alive {
    uint32_t *dummy;
} Alive;

typedef struct _Architecture {
    Architecture_OS *os;
    char *distro;
    char *distro_version;
    char *kernel_version;
    char *architecture;
    char *mangohud_library_version;
    char *mangohud_server_verion;
    char *mangohud_gui_version;
} Architecture;

typedef struct _BlackListInfo {
    bool *blacklisted;
    pb_size_t blacklist_names_count;
    char **blacklist_names;
} BlackListInfo;

typedef struct _Config {
    uint32_t *fps_sampling_interval_msec;
    bool *show_hud;
    struct _Config_HudGeometry *hud_geometry;
    pb_size_t elements_count;
    struct _Config_Element *elements;
    struct _Config_Key *toggle_logging;
    struct _Config_Key *toggle_hud;
    struct _Config_Key *reload_cfg;
} Config;

typedef struct _ConfigReload {
    char *config_path;
} ConfigReload;

typedef struct _ConfigRequest {
    char *machine_name;
    char *program_name;
    bool *wine;
} ConfigRequest;

typedef struct _Config_Element {
    char *name;
    char *font;
    char *color;
    char *text;
    char *value;
    char *suffix;
} Config_Element;

typedef struct _Config_HudGeometry {
    uint32_t *width;
    uint32_t *height;
    uint32_t *offset_x;
    uint32_t *offset_y;
} Config_HudGeometry;

typedef struct _Config_Key {
    char *keybinding;
} Config_Key;

typedef struct _CpuInfo {
    char *name;
    pb_size_t isa_extensions_count;
    char **isa_extensions;
    char *cpufreq_governor;
    pb_size_t core_clock_kHz_count;
    int32_t *core_clock_kHz;
    pb_size_t core_temp_C_count;
    int32_t *core_temp_C;
    pb_size_t load_count;
    float *load;
    float *load_user;
    float *load_sys;
    float *load_nice;
    float *load_idle;
    float *load_wait;
    uint32_t *tasks;
    uint32_t *tasks_runnable;
    uint32_t *tasks_running;
    uint32_t *tasks_stopped;
    uint32_t *tasks_zombie;
    uint64_t *uptime_msec;
    pb_size_t load_average_count;
    float *load_average;
} CpuInfo;

typedef struct _CpuInfoApp {
    uint64_t *cpu_usage_total_usec;
    uint64_t *wall_clock_total_usec;
    uint32_t *thread_count;
} CpuInfoApp;

typedef struct _FrameTime {
    uint64_t *timestamp_usec;
    uint32_t *index;
    uint32_t *time_usec;
} FrameTime;

typedef struct _GpuInfo {
    int32_t *bus;
    char *pci_dev_info;
    char *gpu_name;
    int32_t *core_temp_C;
    int32_t *mem_temp_C;
    int32_t *fan_speed_RPM;
    int32_t *core_clock_kHz;
    int32_t *core_clock_kHz_max;
    int32_t *mem_clock_kHz;
    int32_t *mem_clock_max_kHz;
    float *gpu_load;
    float *power_W;
    float *event_engine;
    float *tesselator;
    float *texture_addresser;
    float *shader_export;
    float *sequencer_instruction_cache;
    float *shader_interpolator;
    float *scan_converter;
    float *primitive_assembly;
    float *depth_block;
    float *color_block;
    uint64_t *gtt;
    uint64_t *gtt_max;
} GpuInfo;

typedef struct _GpuInfoApp {
    uint64_t *vram_used;
    uint64_t *pipelines;
} GpuInfoApp;

typedef struct _IoInfo {
    char dummy_field;
} IoInfo;

typedef struct _IoInfoApp {
    char dummy_field;
} IoInfoApp;

typedef struct _MemInfo {
    uint64_t *total;
    uint64_t *free;
    uint64_t *used;
    uint64_t *buffers;
    uint64_t *cache;
    uint64_t *available;
    uint64_t *swap_total;
    uint64_t *swap_free;
    uint64_t *swap_used;
} MemInfo;

typedef struct _MemInfoApp {
    uint64_t *rss;
    uint64_t *text;
    uint64_t *swap;
    uint64_t *code;
    uint64_t *cached;
    uint64_t *locked;
    uint64_t *sahred;
    uint64_t *maj_fault;
    uint64_t *min_fault;
} MemInfoApp;

typedef struct _Message {
    uint32_t *protocol_version;
    Message_ClientType *client_type;
    struct _Alive *alive;
    struct _Architecture *architecture;
    char *nodename;
    uint64_t *pid;
    uint64_t *uid;
    uint64_t *gid;
    char *groups;
    char *username;
    char *program_name;
    char *wine_version;
    struct _RenderInfo *render_info;
    struct _BlackListInfo *blacklist;
    struct _ConfigRequest *config_request;
    struct _Config *config_data;
    struct _ConfigReload *config_reload;
    struct _Timestamp *timestamp;
    uint64_t *app_uptime_msec;
    float *fps;
    pb_size_t frametimes_count;
    struct _FrameTime *frametimes;
    uint64_t *frames;
    uint64_t *last_present_time_usec;
    uint32_t *frames_since_update;
    uint64_t *last_fps_update_usec;
    bool *stream_frametimes;
    bool *show_hud;
    pb_size_t frame_limits_count;
    float *frame_limits;
    bool *vsync;
    char *media_player_string;
    char *extra_string1;
    char *extra_string2;
    pb_size_t gpu_info_count;
    struct _GpuInfo *gpu_info;
    struct _CpuInfo *cpu_info;
    struct _CpuInfo *cpu_info_details;
    struct _MemInfo *mem_info;
    pb_size_t io_info_count;
    struct _IoInfo *io_info;
    pb_size_t app_gpu_info_count;
    struct _GpuInfoApp *app_gpu_info;
    struct _CpuInfoApp *app_cpu_info;
    struct _MemInfoApp *app_mem_info;
    struct _IoInfoApp *app_io_info;
    pb_size_t clients_count;
    struct _Message *clients;
} Message;

typedef struct _RenderInfo {
    bool *opengl;
    bool *vulkan;
    char *opengl_version;
    char *opengl_device_name;
    int32_t *opengl_version_major;
    int32_t *opengl_version_minor;
    bool *opengl_is_gles;
    pb_size_t opengl_extensions_count;
    char **opengl_extensions;
    char *engine_name;
    char *engine_version;
    char *device_name;
    char *gpu_name;
    char *driver_name;
    int32_t *vulkan_version_major;
    int32_t *vulkan_version_minor;
    int32_t *vulkan_version_patch;
    pb_size_t vulkan_instance_layers_active_count;
    char **vulkan_instance_layers_active;
    pb_size_t vulkan_instance_extensions_count;
    char **vulkan_instance_extensions;
    pb_size_t vulkan_device_extensions_available_count;
    char **vulkan_device_extensions_available;
    pb_size_t vulkan_device_extensions_enabled_count;
    char **vulkan_device_extensions_enabled;
    bool *vulkan_validation_enabled;
    int32_t *device_id;
} RenderInfo;

typedef struct _RpcMessage {
    uint32_t *protocol_version;
    uint64_t *rpc_id;
    struct _Message *msg;
} RpcMessage;

typedef struct _Timestamp {
    char *clock_source;
    uint64_t *timestamp_usec;
} Timestamp;


/* Helper constants for enums */
#define _TimestampSource_MIN TimestampSource_MONOTONIC_RAW
#define _TimestampSource_MAX TimestampSource_WINDOWS_QueryPerformanceCounter
#define _TimestampSource_ARRAYSIZE ((TimestampSource)(TimestampSource_WINDOWS_QueryPerformanceCounter+1))

#define _Message_ClientType_MIN Message_ClientType_APP
#define _Message_ClientType_MAX Message_ClientType_GUI
#define _Message_ClientType_ARRAYSIZE ((Message_ClientType)(Message_ClientType_GUI+1))

#define _Architecture_OS_MIN Architecture_OS_LINUX
#define _Architecture_OS_MAX Architecture_OS_WINDOWS
#define _Architecture_OS_ARRAYSIZE ((Architecture_OS)(Architecture_OS_WINDOWS+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define RpcMessage_init_default                  {NULL, NULL, NULL}
#define Message_init_default                     {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, 0, NULL}
#define Alive_init_default                       {NULL}
#define Architecture_init_default                {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define RenderInfo_init_default                  {NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL, 0, NULL, 0, NULL, NULL, NULL}
#define BlackListInfo_init_default               {NULL, 0, NULL}
#define ConfigRequest_init_default               {NULL, NULL, NULL}
#define ConfigReload_init_default                {NULL}
#define Config_init_default                      {NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL}
#define Config_HudGeometry_init_default          {NULL, NULL, NULL, NULL}
#define Config_Element_init_default              {NULL, NULL, NULL, NULL, NULL, NULL}
#define Config_Key_init_default                  {NULL}
#define Timestamp_init_default                   {NULL, NULL}
#define FrameTime_init_default                   {NULL, NULL, NULL}
#define GpuInfo_init_default                     {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define CpuInfo_init_default                     {NULL, 0, NULL, NULL, 0, NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL}
#define MemInfo_init_default                     {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define IoInfo_init_default                      {0}
#define GpuInfoApp_init_default                  {NULL, NULL}
#define CpuInfoApp_init_default                  {NULL, NULL, NULL}
#define MemInfoApp_init_default                  {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define IoInfoApp_init_default                   {0}
#define RpcMessage_init_zero                     {NULL, NULL, NULL}
#define Message_init_zero                        {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, 0, NULL}
#define Alive_init_zero                          {NULL}
#define Architecture_init_zero                   {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define RenderInfo_init_zero                     {NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL, 0, NULL, 0, NULL, 0, NULL, NULL, NULL}
#define BlackListInfo_init_zero                  {NULL, 0, NULL}
#define ConfigRequest_init_zero                  {NULL, NULL, NULL}
#define ConfigReload_init_zero                   {NULL}
#define Config_init_zero                         {NULL, NULL, NULL, 0, NULL, NULL, NULL, NULL}
#define Config_HudGeometry_init_zero             {NULL, NULL, NULL, NULL}
#define Config_Element_init_zero                 {NULL, NULL, NULL, NULL, NULL, NULL}
#define Config_Key_init_zero                     {NULL}
#define Timestamp_init_zero                      {NULL, NULL}
#define FrameTime_init_zero                      {NULL, NULL, NULL}
#define GpuInfo_init_zero                        {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define CpuInfo_init_zero                        {NULL, 0, NULL, NULL, 0, NULL, 0, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0, NULL}
#define MemInfo_init_zero                        {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define IoInfo_init_zero                         {0}
#define GpuInfoApp_init_zero                     {NULL, NULL}
#define CpuInfoApp_init_zero                     {NULL, NULL, NULL}
#define MemInfoApp_init_zero                     {NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL}
#define IoInfoApp_init_zero                      {0}

/* Field tags (for use in manual encoding/decoding) */
#define Alive_dummy_tag                          1
#define Architecture_os_tag                      1
#define Architecture_distro_tag                  2
#define Architecture_distro_version_tag          3
#define Architecture_kernel_version_tag          4
#define Architecture_architecture_tag            5
#define Architecture_mangohud_library_version_tag 6
#define Architecture_mangohud_server_verion_tag  7
#define Architecture_mangohud_gui_version_tag    8
#define BlackListInfo_blacklisted_tag            1
#define BlackListInfo_blacklist_names_tag        2
#define Config_fps_sampling_interval_msec_tag    1
#define Config_show_hud_tag                      2
#define Config_hud_geometry_tag                  3
#define Config_elements_tag                      4
#define Config_toggle_logging_tag                5
#define Config_toggle_hud_tag                    6
#define Config_reload_cfg_tag                    7
#define ConfigReload_config_path_tag             1
#define ConfigRequest_machine_name_tag           1
#define ConfigRequest_program_name_tag           2
#define ConfigRequest_wine_tag                   3
#define Config_Element_name_tag                  1
#define Config_Element_font_tag                  2
#define Config_Element_color_tag                 3
#define Config_Element_text_tag                  4
#define Config_Element_value_tag                 5
#define Config_Element_suffix_tag                6
#define Config_HudGeometry_width_tag             1
#define Config_HudGeometry_height_tag            2
#define Config_HudGeometry_offset_x_tag          3
#define Config_HudGeometry_offset_y_tag          4
#define Config_Key_keybinding_tag                1
#define CpuInfo_name_tag                         1
#define CpuInfo_isa_extensions_tag               2
#define CpuInfo_cpufreq_governor_tag             3
#define CpuInfo_core_clock_kHz_tag               4
#define CpuInfo_core_temp_C_tag                  5
#define CpuInfo_load_tag                         6
#define CpuInfo_load_user_tag                    7
#define CpuInfo_load_sys_tag                     8
#define CpuInfo_load_nice_tag                    9
#define CpuInfo_load_idle_tag                    10
#define CpuInfo_load_wait_tag                    11
#define CpuInfo_tasks_tag                        20
#define CpuInfo_tasks_runnable_tag               21
#define CpuInfo_tasks_running_tag                22
#define CpuInfo_tasks_stopped_tag                23
#define CpuInfo_tasks_zombie_tag                 24
#define CpuInfo_uptime_msec_tag                  30
#define CpuInfo_load_average_tag                 40
#define CpuInfoApp_cpu_usage_total_usec_tag      1
#define CpuInfoApp_wall_clock_total_usec_tag     2
#define CpuInfoApp_thread_count_tag              3
#define FrameTime_timestamp_usec_tag             1
#define FrameTime_index_tag                      2
#define FrameTime_time_usec_tag                  3
#define GpuInfo_bus_tag                          1
#define GpuInfo_pci_dev_info_tag                 2
#define GpuInfo_gpu_name_tag                     3
#define GpuInfo_core_temp_C_tag                  10
#define GpuInfo_mem_temp_C_tag                   11
#define GpuInfo_fan_speed_RPM_tag                12
#define GpuInfo_core_clock_kHz_tag               20
#define GpuInfo_core_clock_kHz_max_tag           21
#define GpuInfo_mem_clock_kHz_tag                22
#define GpuInfo_mem_clock_max_kHz_tag            23
#define GpuInfo_gpu_load_tag                     30
#define GpuInfo_power_W_tag                      31
#define GpuInfo_event_engine_tag                 51
#define GpuInfo_tesselator_tag                   52
#define GpuInfo_texture_addresser_tag            53
#define GpuInfo_shader_export_tag                54
#define GpuInfo_sequencer_instruction_cache_tag  55
#define GpuInfo_shader_interpolator_tag          56
#define GpuInfo_scan_converter_tag               57
#define GpuInfo_primitive_assembly_tag           58
#define GpuInfo_depth_block_tag                  59
#define GpuInfo_color_block_tag                  60
#define GpuInfo_gtt_tag                          61
#define GpuInfo_gtt_max_tag                      62
#define GpuInfoApp_vram_used_tag                 1
#define GpuInfoApp_pipelines_tag                 2
#define MemInfo_total_tag                        1
#define MemInfo_free_tag                         2
#define MemInfo_used_tag                         3
#define MemInfo_buffers_tag                      4
#define MemInfo_cache_tag                        5
#define MemInfo_available_tag                    6
#define MemInfo_swap_total_tag                   10
#define MemInfo_swap_free_tag                    11
#define MemInfo_swap_used_tag                    12
#define MemInfoApp_rss_tag                       1
#define MemInfoApp_text_tag                      2
#define MemInfoApp_swap_tag                      3
#define MemInfoApp_code_tag                      4
#define MemInfoApp_cached_tag                    5
#define MemInfoApp_locked_tag                    6
#define MemInfoApp_sahred_tag                    7
#define MemInfoApp_maj_fault_tag                 10
#define MemInfoApp_min_fault_tag                 11
#define Message_protocol_version_tag             1
#define Message_client_type_tag                  2
#define Message_alive_tag                        3
#define Message_architecture_tag                 10
#define Message_nodename_tag                     11
#define Message_pid_tag                          12
#define Message_uid_tag                          13
#define Message_gid_tag                          14
#define Message_groups_tag                       15
#define Message_username_tag                     16
#define Message_program_name_tag                 17
#define Message_wine_version_tag                 18
#define Message_render_info_tag                  20
#define Message_blacklist_tag                    30
#define Message_config_request_tag               31
#define Message_config_data_tag                  32
#define Message_config_reload_tag                33
#define Message_timestamp_tag                    40
#define Message_app_uptime_msec_tag              41
#define Message_fps_tag                          50
#define Message_frametimes_tag                   51
#define Message_frames_tag                       52
#define Message_last_present_time_usec_tag       53
#define Message_frames_since_update_tag          54
#define Message_last_fps_update_usec_tag         55
#define Message_stream_frametimes_tag            60
#define Message_show_hud_tag                     61
#define Message_frame_limits_tag                 62
#define Message_vsync_tag                        63
#define Message_media_player_string_tag          70
#define Message_extra_string1_tag                71
#define Message_extra_string2_tag                72
#define Message_gpu_info_tag                     80
#define Message_cpu_info_tag                     81
#define Message_cpu_info_details_tag             82
#define Message_mem_info_tag                     83
#define Message_io_info_tag                      84
#define Message_app_gpu_info_tag                 90
#define Message_app_cpu_info_tag                 91
#define Message_app_mem_info_tag                 93
#define Message_app_io_info_tag                  94
#define Message_clients_tag                      100
#define RenderInfo_opengl_tag                    1
#define RenderInfo_vulkan_tag                    2
#define RenderInfo_opengl_version_tag            10
#define RenderInfo_opengl_device_name_tag        11
#define RenderInfo_opengl_version_major_tag      12
#define RenderInfo_opengl_version_minor_tag      13
#define RenderInfo_opengl_is_gles_tag            14
#define RenderInfo_opengl_extensions_tag         15
#define RenderInfo_engine_name_tag               20
#define RenderInfo_engine_version_tag            21
#define RenderInfo_device_name_tag               22
#define RenderInfo_gpu_name_tag                  23
#define RenderInfo_driver_name_tag               24
#define RenderInfo_vulkan_version_major_tag      25
#define RenderInfo_vulkan_version_minor_tag      26
#define RenderInfo_vulkan_version_patch_tag      27
#define RenderInfo_vulkan_instance_layers_active_tag 28
#define RenderInfo_vulkan_instance_extensions_tag 29
#define RenderInfo_vulkan_device_extensions_available_tag 30
#define RenderInfo_vulkan_device_extensions_enabled_tag 31
#define RenderInfo_vulkan_validation_enabled_tag 32
#define RenderInfo_device_id_tag                 40
#define RpcMessage_protocol_version_tag          1
#define RpcMessage_rpc_id_tag                    2
#define RpcMessage_msg_tag                       6
#define Timestamp_clock_source_tag               1
#define Timestamp_timestamp_usec_tag             2

/* Struct field encoding specification for nanopb */
#define RpcMessage_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   protocol_version,   1) \
X(a, POINTER,  SINGULAR, UINT64,   rpc_id,            2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  msg,               6)
#define RpcMessage_CALLBACK NULL
#define RpcMessage_DEFAULT NULL
#define RpcMessage_msg_MSGTYPE Message

#define Message_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   protocol_version,   1) \
X(a, POINTER,  SINGULAR, UENUM,    client_type,       2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  alive,             3) \
X(a, POINTER,  OPTIONAL, MESSAGE,  architecture,     10) \
X(a, POINTER,  SINGULAR, STRING,   nodename,         11) \
X(a, POINTER,  SINGULAR, UINT64,   pid,              12) \
X(a, POINTER,  SINGULAR, UINT64,   uid,              13) \
X(a, POINTER,  SINGULAR, UINT64,   gid,              14) \
X(a, POINTER,  SINGULAR, STRING,   groups,           15) \
X(a, POINTER,  SINGULAR, STRING,   username,         16) \
X(a, POINTER,  SINGULAR, STRING,   program_name,     17) \
X(a, POINTER,  SINGULAR, STRING,   wine_version,     18) \
X(a, POINTER,  OPTIONAL, MESSAGE,  render_info,      20) \
X(a, POINTER,  OPTIONAL, MESSAGE,  blacklist,        30) \
X(a, POINTER,  OPTIONAL, MESSAGE,  config_request,   31) \
X(a, POINTER,  OPTIONAL, MESSAGE,  config_data,      32) \
X(a, POINTER,  OPTIONAL, MESSAGE,  config_reload,    33) \
X(a, POINTER,  OPTIONAL, MESSAGE,  timestamp,        40) \
X(a, POINTER,  SINGULAR, UINT64,   app_uptime_msec,  41) \
X(a, POINTER,  SINGULAR, FLOAT,    fps,              50) \
X(a, POINTER,  REPEATED, MESSAGE,  frametimes,       51) \
X(a, POINTER,  SINGULAR, UINT64,   frames,           52) \
X(a, POINTER,  SINGULAR, UINT64,   last_present_time_usec,  53) \
X(a, POINTER,  SINGULAR, UINT32,   frames_since_update,  54) \
X(a, POINTER,  SINGULAR, UINT64,   last_fps_update_usec,  55) \
X(a, POINTER,  SINGULAR, BOOL,     stream_frametimes,  60) \
X(a, POINTER,  SINGULAR, BOOL,     show_hud,         61) \
X(a, POINTER,  REPEATED, FLOAT,    frame_limits,     62) \
X(a, POINTER,  SINGULAR, BOOL,     vsync,            63) \
X(a, POINTER,  SINGULAR, STRING,   media_player_string,  70) \
X(a, POINTER,  SINGULAR, STRING,   extra_string1,    71) \
X(a, POINTER,  SINGULAR, STRING,   extra_string2,    72) \
X(a, POINTER,  REPEATED, MESSAGE,  gpu_info,         80) \
X(a, POINTER,  OPTIONAL, MESSAGE,  cpu_info,         81) \
X(a, POINTER,  OPTIONAL, MESSAGE,  cpu_info_details,  82) \
X(a, POINTER,  OPTIONAL, MESSAGE,  mem_info,         83) \
X(a, POINTER,  REPEATED, MESSAGE,  io_info,          84) \
X(a, POINTER,  REPEATED, MESSAGE,  app_gpu_info,     90) \
X(a, POINTER,  OPTIONAL, MESSAGE,  app_cpu_info,     91) \
X(a, POINTER,  OPTIONAL, MESSAGE,  app_mem_info,     93) \
X(a, POINTER,  OPTIONAL, MESSAGE,  app_io_info,      94) \
X(a, POINTER,  REPEATED, MESSAGE,  clients,         100)
#define Message_CALLBACK NULL
#define Message_DEFAULT NULL
#define Message_alive_MSGTYPE Alive
#define Message_architecture_MSGTYPE Architecture
#define Message_render_info_MSGTYPE RenderInfo
#define Message_blacklist_MSGTYPE BlackListInfo
#define Message_config_request_MSGTYPE ConfigRequest
#define Message_config_data_MSGTYPE Config
#define Message_config_reload_MSGTYPE ConfigReload
#define Message_timestamp_MSGTYPE Timestamp
#define Message_frametimes_MSGTYPE FrameTime
#define Message_gpu_info_MSGTYPE GpuInfo
#define Message_cpu_info_MSGTYPE CpuInfo
#define Message_cpu_info_details_MSGTYPE CpuInfo
#define Message_mem_info_MSGTYPE MemInfo
#define Message_io_info_MSGTYPE IoInfo
#define Message_app_gpu_info_MSGTYPE GpuInfoApp
#define Message_app_cpu_info_MSGTYPE CpuInfoApp
#define Message_app_mem_info_MSGTYPE MemInfoApp
#define Message_app_io_info_MSGTYPE IoInfoApp
#define Message_clients_MSGTYPE Message

#define Alive_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   dummy,             1)
#define Alive_CALLBACK NULL
#define Alive_DEFAULT NULL

#define Architecture_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UENUM,    os,                1) \
X(a, POINTER,  SINGULAR, STRING,   distro,            2) \
X(a, POINTER,  SINGULAR, STRING,   distro_version,    3) \
X(a, POINTER,  SINGULAR, STRING,   kernel_version,    4) \
X(a, POINTER,  SINGULAR, STRING,   architecture,      5) \
X(a, POINTER,  SINGULAR, STRING,   mangohud_library_version,   6) \
X(a, POINTER,  SINGULAR, STRING,   mangohud_server_verion,   7) \
X(a, POINTER,  SINGULAR, STRING,   mangohud_gui_version,   8)
#define Architecture_CALLBACK NULL
#define Architecture_DEFAULT NULL

#define RenderInfo_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, BOOL,     opengl,            1) \
X(a, POINTER,  SINGULAR, BOOL,     vulkan,            2) \
X(a, POINTER,  SINGULAR, STRING,   opengl_version,   10) \
X(a, POINTER,  SINGULAR, STRING,   opengl_device_name,  11) \
X(a, POINTER,  SINGULAR, INT32,    opengl_version_major,  12) \
X(a, POINTER,  SINGULAR, INT32,    opengl_version_minor,  13) \
X(a, POINTER,  SINGULAR, BOOL,     opengl_is_gles,   14) \
X(a, POINTER,  REPEATED, STRING,   opengl_extensions,  15) \
X(a, POINTER,  SINGULAR, STRING,   engine_name,      20) \
X(a, POINTER,  SINGULAR, STRING,   engine_version,   21) \
X(a, POINTER,  SINGULAR, STRING,   device_name,      22) \
X(a, POINTER,  SINGULAR, STRING,   gpu_name,         23) \
X(a, POINTER,  SINGULAR, STRING,   driver_name,      24) \
X(a, POINTER,  SINGULAR, INT32,    vulkan_version_major,  25) \
X(a, POINTER,  SINGULAR, INT32,    vulkan_version_minor,  26) \
X(a, POINTER,  SINGULAR, INT32,    vulkan_version_patch,  27) \
X(a, POINTER,  REPEATED, STRING,   vulkan_instance_layers_active,  28) \
X(a, POINTER,  REPEATED, STRING,   vulkan_instance_extensions,  29) \
X(a, POINTER,  REPEATED, STRING,   vulkan_device_extensions_available,  30) \
X(a, POINTER,  REPEATED, STRING,   vulkan_device_extensions_enabled,  31) \
X(a, POINTER,  SINGULAR, BOOL,     vulkan_validation_enabled,  32) \
X(a, POINTER,  SINGULAR, INT32,    device_id,        40)
#define RenderInfo_CALLBACK NULL
#define RenderInfo_DEFAULT NULL

#define BlackListInfo_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, BOOL,     blacklisted,       1) \
X(a, POINTER,  REPEATED, STRING,   blacklist_names,   2)
#define BlackListInfo_CALLBACK NULL
#define BlackListInfo_DEFAULT NULL

#define ConfigRequest_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   machine_name,      1) \
X(a, POINTER,  SINGULAR, STRING,   program_name,      2) \
X(a, POINTER,  SINGULAR, BOOL,     wine,              3)
#define ConfigRequest_CALLBACK NULL
#define ConfigRequest_DEFAULT NULL

#define ConfigReload_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   config_path,       1)
#define ConfigReload_CALLBACK NULL
#define ConfigReload_DEFAULT NULL

#define Config_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   fps_sampling_interval_msec,   1) \
X(a, POINTER,  SINGULAR, BOOL,     show_hud,          2) \
X(a, POINTER,  OPTIONAL, MESSAGE,  hud_geometry,      3) \
X(a, POINTER,  REPEATED, MESSAGE,  elements,          4) \
X(a, POINTER,  OPTIONAL, MESSAGE,  toggle_logging,    5) \
X(a, POINTER,  OPTIONAL, MESSAGE,  toggle_hud,        6) \
X(a, POINTER,  OPTIONAL, MESSAGE,  reload_cfg,        7)
#define Config_CALLBACK NULL
#define Config_DEFAULT NULL
#define Config_hud_geometry_MSGTYPE Config_HudGeometry
#define Config_elements_MSGTYPE Config_Element
#define Config_toggle_logging_MSGTYPE Config_Key
#define Config_toggle_hud_MSGTYPE Config_Key
#define Config_reload_cfg_MSGTYPE Config_Key

#define Config_HudGeometry_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT32,   width,             1) \
X(a, POINTER,  SINGULAR, UINT32,   height,            2) \
X(a, POINTER,  SINGULAR, UINT32,   offset_x,          3) \
X(a, POINTER,  SINGULAR, UINT32,   offset_y,          4)
#define Config_HudGeometry_CALLBACK NULL
#define Config_HudGeometry_DEFAULT NULL

#define Config_Element_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   name,              1) \
X(a, POINTER,  SINGULAR, STRING,   font,              2) \
X(a, POINTER,  SINGULAR, STRING,   color,             3) \
X(a, POINTER,  SINGULAR, STRING,   text,              4) \
X(a, POINTER,  SINGULAR, STRING,   value,             5) \
X(a, POINTER,  SINGULAR, STRING,   suffix,            6)
#define Config_Element_CALLBACK NULL
#define Config_Element_DEFAULT NULL

#define Config_Key_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   keybinding,        1)
#define Config_Key_CALLBACK NULL
#define Config_Key_DEFAULT NULL

#define Timestamp_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   clock_source,      1) \
X(a, POINTER,  SINGULAR, UINT64,   timestamp_usec,    2)
#define Timestamp_CALLBACK NULL
#define Timestamp_DEFAULT NULL

#define FrameTime_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT64,   timestamp_usec,    1) \
X(a, POINTER,  SINGULAR, UINT32,   index,             2) \
X(a, POINTER,  SINGULAR, UINT32,   time_usec,         3)
#define FrameTime_CALLBACK NULL
#define FrameTime_DEFAULT NULL

#define GpuInfo_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, INT32,    bus,               1) \
X(a, POINTER,  SINGULAR, STRING,   pci_dev_info,      2) \
X(a, POINTER,  SINGULAR, STRING,   gpu_name,          3) \
X(a, POINTER,  SINGULAR, INT32,    core_temp_C,      10) \
X(a, POINTER,  SINGULAR, INT32,    mem_temp_C,       11) \
X(a, POINTER,  SINGULAR, INT32,    fan_speed_RPM,    12) \
X(a, POINTER,  SINGULAR, INT32,    core_clock_kHz,   20) \
X(a, POINTER,  SINGULAR, INT32,    core_clock_kHz_max,  21) \
X(a, POINTER,  SINGULAR, INT32,    mem_clock_kHz,    22) \
X(a, POINTER,  SINGULAR, INT32,    mem_clock_max_kHz,  23) \
X(a, POINTER,  SINGULAR, FLOAT,    gpu_load,         30) \
X(a, POINTER,  SINGULAR, FLOAT,    power_W,          31) \
X(a, POINTER,  SINGULAR, FLOAT,    event_engine,     51) \
X(a, POINTER,  SINGULAR, FLOAT,    tesselator,       52) \
X(a, POINTER,  SINGULAR, FLOAT,    texture_addresser,  53) \
X(a, POINTER,  SINGULAR, FLOAT,    shader_export,    54) \
X(a, POINTER,  SINGULAR, FLOAT,    sequencer_instruction_cache,  55) \
X(a, POINTER,  SINGULAR, FLOAT,    shader_interpolator,  56) \
X(a, POINTER,  SINGULAR, FLOAT,    scan_converter,   57) \
X(a, POINTER,  SINGULAR, FLOAT,    primitive_assembly,  58) \
X(a, POINTER,  SINGULAR, FLOAT,    depth_block,      59) \
X(a, POINTER,  SINGULAR, FLOAT,    color_block,      60) \
X(a, POINTER,  SINGULAR, UINT64,   gtt,              61) \
X(a, POINTER,  SINGULAR, UINT64,   gtt_max,          62)
#define GpuInfo_CALLBACK NULL
#define GpuInfo_DEFAULT NULL

#define CpuInfo_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, STRING,   name,              1) \
X(a, POINTER,  REPEATED, STRING,   isa_extensions,    2) \
X(a, POINTER,  SINGULAR, STRING,   cpufreq_governor,   3) \
X(a, POINTER,  REPEATED, INT32,    core_clock_kHz,    4) \
X(a, POINTER,  REPEATED, INT32,    core_temp_C,       5) \
X(a, POINTER,  REPEATED, FLOAT,    load,              6) \
X(a, POINTER,  SINGULAR, FLOAT,    load_user,         7) \
X(a, POINTER,  SINGULAR, FLOAT,    load_sys,          8) \
X(a, POINTER,  SINGULAR, FLOAT,    load_nice,         9) \
X(a, POINTER,  SINGULAR, FLOAT,    load_idle,        10) \
X(a, POINTER,  SINGULAR, FLOAT,    load_wait,        11) \
X(a, POINTER,  SINGULAR, UINT32,   tasks,            20) \
X(a, POINTER,  SINGULAR, UINT32,   tasks_runnable,   21) \
X(a, POINTER,  SINGULAR, UINT32,   tasks_running,    22) \
X(a, POINTER,  SINGULAR, UINT32,   tasks_stopped,    23) \
X(a, POINTER,  SINGULAR, UINT32,   tasks_zombie,     24) \
X(a, POINTER,  SINGULAR, UINT64,   uptime_msec,      30) \
X(a, POINTER,  REPEATED, FLOAT,    load_average,     40)
#define CpuInfo_CALLBACK NULL
#define CpuInfo_DEFAULT NULL

#define MemInfo_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT64,   total,             1) \
X(a, POINTER,  SINGULAR, UINT64,   free,              2) \
X(a, POINTER,  SINGULAR, UINT64,   used,              3) \
X(a, POINTER,  SINGULAR, UINT64,   buffers,           4) \
X(a, POINTER,  SINGULAR, UINT64,   cache,             5) \
X(a, POINTER,  SINGULAR, UINT64,   available,         6) \
X(a, POINTER,  SINGULAR, UINT64,   swap_total,       10) \
X(a, POINTER,  SINGULAR, UINT64,   swap_free,        11) \
X(a, POINTER,  SINGULAR, UINT64,   swap_used,        12)
#define MemInfo_CALLBACK NULL
#define MemInfo_DEFAULT NULL

#define IoInfo_FIELDLIST(X, a) \

#define IoInfo_CALLBACK NULL
#define IoInfo_DEFAULT NULL

#define GpuInfoApp_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT64,   vram_used,         1) \
X(a, POINTER,  SINGULAR, UINT64,   pipelines,         2)
#define GpuInfoApp_CALLBACK NULL
#define GpuInfoApp_DEFAULT NULL

#define CpuInfoApp_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT64,   cpu_usage_total_usec,   1) \
X(a, POINTER,  SINGULAR, UINT64,   wall_clock_total_usec,   2) \
X(a, POINTER,  SINGULAR, UINT32,   thread_count,      3)
#define CpuInfoApp_CALLBACK NULL
#define CpuInfoApp_DEFAULT NULL

#define MemInfoApp_FIELDLIST(X, a) \
X(a, POINTER,  SINGULAR, UINT64,   rss,               1) \
X(a, POINTER,  SINGULAR, UINT64,   text,              2) \
X(a, POINTER,  SINGULAR, UINT64,   swap,              3) \
X(a, POINTER,  SINGULAR, UINT64,   code,              4) \
X(a, POINTER,  SINGULAR, UINT64,   cached,            5) \
X(a, POINTER,  SINGULAR, UINT64,   locked,            6) \
X(a, POINTER,  SINGULAR, UINT64,   sahred,            7) \
X(a, POINTER,  SINGULAR, UINT64,   maj_fault,        10) \
X(a, POINTER,  SINGULAR, UINT64,   min_fault,        11)
#define MemInfoApp_CALLBACK NULL
#define MemInfoApp_DEFAULT NULL

#define IoInfoApp_FIELDLIST(X, a) \

#define IoInfoApp_CALLBACK NULL
#define IoInfoApp_DEFAULT NULL

extern const pb_msgdesc_t RpcMessage_msg;
extern const pb_msgdesc_t Message_msg;
extern const pb_msgdesc_t Alive_msg;
extern const pb_msgdesc_t Architecture_msg;
extern const pb_msgdesc_t RenderInfo_msg;
extern const pb_msgdesc_t BlackListInfo_msg;
extern const pb_msgdesc_t ConfigRequest_msg;
extern const pb_msgdesc_t ConfigReload_msg;
extern const pb_msgdesc_t Config_msg;
extern const pb_msgdesc_t Config_HudGeometry_msg;
extern const pb_msgdesc_t Config_Element_msg;
extern const pb_msgdesc_t Config_Key_msg;
extern const pb_msgdesc_t Timestamp_msg;
extern const pb_msgdesc_t FrameTime_msg;
extern const pb_msgdesc_t GpuInfo_msg;
extern const pb_msgdesc_t CpuInfo_msg;
extern const pb_msgdesc_t MemInfo_msg;
extern const pb_msgdesc_t IoInfo_msg;
extern const pb_msgdesc_t GpuInfoApp_msg;
extern const pb_msgdesc_t CpuInfoApp_msg;
extern const pb_msgdesc_t MemInfoApp_msg;
extern const pb_msgdesc_t IoInfoApp_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define RpcMessage_fields &RpcMessage_msg
#define Message_fields &Message_msg
#define Alive_fields &Alive_msg
#define Architecture_fields &Architecture_msg
#define RenderInfo_fields &RenderInfo_msg
#define BlackListInfo_fields &BlackListInfo_msg
#define ConfigRequest_fields &ConfigRequest_msg
#define ConfigReload_fields &ConfigReload_msg
#define Config_fields &Config_msg
#define Config_HudGeometry_fields &Config_HudGeometry_msg
#define Config_Element_fields &Config_Element_msg
#define Config_Key_fields &Config_Key_msg
#define Timestamp_fields &Timestamp_msg
#define FrameTime_fields &FrameTime_msg
#define GpuInfo_fields &GpuInfo_msg
#define CpuInfo_fields &CpuInfo_msg
#define MemInfo_fields &MemInfo_msg
#define IoInfo_fields &IoInfo_msg
#define GpuInfoApp_fields &GpuInfoApp_msg
#define CpuInfoApp_fields &CpuInfoApp_msg
#define MemInfoApp_fields &MemInfoApp_msg
#define IoInfoApp_fields &IoInfoApp_msg

/* Maximum encoded size of messages (where known) */
/* RpcMessage_size depends on runtime parameters */
/* Message_size depends on runtime parameters */
/* Alive_size depends on runtime parameters */
/* Architecture_size depends on runtime parameters */
/* RenderInfo_size depends on runtime parameters */
/* BlackListInfo_size depends on runtime parameters */
/* ConfigRequest_size depends on runtime parameters */
/* ConfigReload_size depends on runtime parameters */
/* Config_size depends on runtime parameters */
/* Config_HudGeometry_size depends on runtime parameters */
/* Config_Element_size depends on runtime parameters */
/* Config_Key_size depends on runtime parameters */
/* Timestamp_size depends on runtime parameters */
/* FrameTime_size depends on runtime parameters */
/* GpuInfo_size depends on runtime parameters */
/* CpuInfo_size depends on runtime parameters */
/* MemInfo_size depends on runtime parameters */
#define IoInfo_size                              0
/* GpuInfoApp_size depends on runtime parameters */
/* CpuInfoApp_size depends on runtime parameters */
/* MemInfoApp_size depends on runtime parameters */
#define IoInfoApp_size                           0

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
